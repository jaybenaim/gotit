{"version":3,"sources":["components/organisms/NavBar/navbar.module.scss","pages/Home/home.module.scss","components/organisms/NavBar/index.jsx","api/local.js","config/firebase.js","components/atoms/ImageUpload/ImageUpload.jsx","components/atoms/Heading/Heading.jsx","components/organisms/Header/Header.jsx","pages/Home/Home.jsx","components/organisms/Auth/PrivateRoute/PrivateRoute.jsx","components/atoms/Notifications/Notifications.jsx","components/organisms/Auth/SignIn/SignIn.jsx","components/organisms/Auth/SignUp/SignUp.jsx","pages/Admin/AdminHome/AdminHome.jsx","App.jsx","registerServiceWorker.js","pages/ErrorPage/index.jsx","components/atoms/ErrorBoundary/ErrorBoundary.jsx","redux/reducers/errorReducers.js","redux/reducers/index.js","redux/actions/types.js","redux/store.js","index.jsx"],"names":["module","exports","skipLink","home","header","NavBar","firebase","useFirebase","history","useHistory","isLoggedIn","useSelector","state","auth","isEmpty","react_default","a","createElement","Fragment","className","styles","href","react_router_dom","to","variant","onClick","signOut","then","console","log","push","catch","error","axios","create","baseURL","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","ImageUpload","_useState","useState","_useState2","Object","slicedToArray","imageAsFile","setImageAsFile","_useState3","imgUrl","_useState4","uploadedImage","setUploadedImage","_useState5","_useState6","dataUri","setDataUri","userId","undefined","uid","_useState7","_useState8","title","setTitle","_useState9","_useState10","details","setDetails","_useState11","_useState12","predictions","setPredictions","_useState13","_useState14","useCamera","toggleCamera","fetchData","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","wrap","_context","prev","next","local","post","response","data","length","name","abrupt","sent","stop","_x","apply","this","arguments","handleFireBaseUpload","_ref2","_callee3","e","randInt","_context3","preventDefault","concat","Math","floor","random","ref","putString","_ref3","_callee2","snap","storageResponse","firebaseUrl","_context2","child","getDownloadURL","src","alt","innerTitle","innerDetails","prevObject","objectSpread","_x3","err","_x2","height","width","onSubmit","value","onChange","target","placeholder","type","image","files","capture","Button","build_default","onTakePhoto","handleTakePhoto","onCameraStop","imageType","isFullscreen","idealFacingMode","isSilentMode","map","prediction","index","key","Heading","props","HeadingStyle","headingStyle","headingText","Header","buttonType","buttonText","Jumbotron","fluid","atoms_Heading_Heading","Home","id","organisms_Header_Header","atoms_ImageUpload_ImageUpload","PrivateRoute","role","Component","children","rest","objectWithoutProperties","showAlert","setShowAlert","react_router","assign","render","pages_Home_Home","Notifications","heading","body","small","confirmButtonText","handleConfirm","style","show","setShow","Alert","onClose","dismissible","Toast","toUpperCase","Body","SignIn","email","setEmail","password","setPassword","errors","setErrors","signInWithProvider","provider","userEmail","userPassword","login","code","includes","toConsumableArray","atoms_Notifications_Notifications","i","method","htmlFor","required","event","aria-hidden","createUser","AdminHome","App","organisms_NavBar","PrivateRoute_PrivateRoute","exact","path","Admin_AdminHome_AdminHome","component","SignUp","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ErrorPage","ErrorBoundary","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","errorInfo","pages_ErrorPage","React","withRouter","initialState","combineReducers","action","payload","firebaseReducer","firestoreReducer","loggerMiddleware","createLogger","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","rrfProps","config","userProfile","useFirestoreForProfile","dispatch","createFirestoreInstance","ReactDOM","react_redux_es","es","basename","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9f5f0c04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"skipLink\":\"navbar_skipLink__3rR5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home_home__wf-cy\",\"header\":\"home_header__3Kz3H\"};","import React from \"react\";\nimport styles from \"./navbar.module.scss\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst NavBar = () => {\n  const firebase = useFirebase();\n  const history = useHistory();\n  const isLoggedIn = useSelector((state) => !state.firebase.auth.isEmpty);\n\n  const signOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(function () {\n        // Sign-out successful.\n        console.log(\"signed out\");\n        history.push(\"/sign-in\");\n      })\n      .catch(function (error) {\n        // An error happened.\n        console.log(error);\n      });\n  };\n  return (\n    <React.Fragment>\n      <div className={styles.skipLink}>\n        <a href=\"#home\">Skip to Main Content</a>\n      </div>\n      <nav className=\"navbar navbar-expand-sm navbar-light border-bottom justify-content-between\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          react_starter_template\n        </Link>\n        <div className=\"navbar-nav\">\n          <Link to=\"/home\" className=\"nav-item nav-link active\">\n            Home\n          </Link>\n          {isLoggedIn ? (\n            <>\n              <Link to=\"/admin\" className=\"nav-item nav-link \">\n                Account\n              </Link>\n\n              <button\n                variant={\"outline-secondary\"}\n                className=\"nav-item nav-link \"\n                onClick={() => signOut()}\n              >\n                Logout\n              </button>\n            </>\n          ) : (\n              <Link to=\"/sign-in\">Sign In</Link>\n            )}\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n};\nexport default NavBar;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:5000/api\",\n});\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// firebase.analytics();\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst storage = firebase.storage();\nexport { storage, auth, firestore };\n","import local from \"api/local\";\nimport { storage } from \"config/firebase\";\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport \"./imageUpload.scss\"\nimport Camera from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\n\n\nconst ImageUpload = () => {\n  const auth = useSelector((state) => state.firebase.auth)\n  const allInputs = { imgUrl: \"\" };\n\n  const [imageAsFile, setImageAsFile] = useState(\"\");\n  const [uploadedImage, setUploadedImage] = useState(allInputs);\n  const [dataUri, setDataUri] = useState('');\n\n  const userId = !auth.isEmpty ? auth.uid : undefined\n\n  const [title, setTitle] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [predictions, setPredictions] = useState([])\n  const [useCamera, toggleCamera] = useState(false)\n\n  const handleImage = (e) => {\n    const image = e.target.files[0];\n\n    setImageAsFile(image);\n  }\n\n  const fetchData = async (url) => {\n    return await local.post(\"/images\", { imgUrl: url }).then(response => {\n      if (response.data.length > 0) {\n        setPredictions(response.data)\n      } else {\n        setPredictions([{ name: 'No Matches' }])\n      }\n    })\n  }\n\n\n  const handleFireBaseUpload = async (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    // image loading\n    if (imageAsFile === \"\") {\n      setPredictions([{ name: `Error: not an image, the image file is a ${typeof imageAsFile}` }])\n    }\n\n    if (dataUri) {\n      const randInt = Math.floor(Math.random() * 1000000)\n\n      await storage.ref(`${userId}/images/temp_${randInt}`)\n        .putString(dataUri, 'data_url').then(async snap => {\n\n          console.log(\"uploaded base64 image\")\n          console.log(snap)\n\n          const storageResponse = await storage\n            .ref(`${userId}/images`)\n            .child(`temp_${randInt}`)\n            .getDownloadURL()\n\n          const firebaseUrl = storageResponse ? storageResponse : {}\n\n          let data = {\n            src: firebaseUrl,\n            alt: imageAsFile.name,\n            innerTitle: title,\n            innerDetails: details,\n          };\n\n          // Save in db \n          setUploadedImage((prevObject) => ({\n            ...data,\n            ...prevObject,\n            imgUrl: firebaseUrl,\n          }));\n\n          // Get predictions \n          fetchData(firebaseUrl)\n        }).catch(err => console.log(err));\n\n    }\n\n    //initiates the firebase side uploading\n    // uploadTask.on(\n    //   \"state_changed\",\n    //   (snapShot) => {\n    //     console.log(snapShot);\n    //   },\n    //   (err) => {\n    //     // dispatch error \n    //     console.log(err);\n    //   },\n    //   async () => {\n    //     const storageResponse = await storage\n    //       .ref(`${userId}/images`)\n    //       .child(imageAsFile.name)\n    //       .getDownloadURL()\n\n    //     const firebaseUrl = storageResponse ? storageResponse : {}\n\n    //     // save url in mongo\n    //     let data = {\n    //       src: firebaseUrl,\n    //       alt: imageAsFile.name,\n    //       innerTitle: title,\n    //       innerDetails: details,\n    //     };\n\n    //     setUploadedImage((prevObject) => ({\n    //       ...data,\n    //       ...prevObject,\n    //       imgUrl: firebaseUrl,\n    //     }));\n\n    //     // Get predictions \n    //     fetchData(firebaseUrl)\n    //   }\n    // );\n\n  };\n\n  const results = () => {\n    return predictions.length > 0 && predictions.map((prediction, index) => {\n      return (<li key={index}>{prediction.name}</li>)\n    })\n  }\n\n  const openCamera = () => {\n    toggleCamera(!useCamera)\n  }\n\n  const handleTakePhoto = (dataUri) => {\n    // Do stuff with the photo...\n    setDataUri(dataUri);\n    handleFireBaseUpload()\n  }\n\n  const handleCameraStop = () => {\n    // toggleCamera(!useCamera)\n  }\n\n  return (\n    <div className=\"image-upload container\">\n      {uploadedImage.src && (\n        <div>\n          <img src={uploadedImage.imgUrl} alt={uploadedImage.alt} height={400} width={400} />\n        </div>\n      )}\n\n      <form onSubmit={handleFireBaseUpload}>\n        {/* Generate predicted title and description here */}\n        <input\n          name=\"setTitle\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"Title\"\n        />\n\n        <textarea\n          className=\"input-group-text\"\n          name=\"setTitle\"\n          value={details}\n          onChange={(e) => setDetails(e.target.value)}\n          placeholder=\"Details\"\n        />\n        {/* End generated titles */}\n\n        <input type=\"file\" onChange={handleImage} capture=\"camera\" />\n        <Button type=\"submit\">Add</Button>\n      </form>\n\n      <Button onClick={() => openCamera()}>Take photo</Button>\n\n      {\n        useCamera && (\n          <Camera\n            onTakePhoto={(dataUri) => { handleTakePhoto(dataUri) }}\n            onCameraStop={() => { handleCameraStop() }}\n            imageType=\"jpg\"\n            isFullscreen\n            idealFacingMode=\"environment\"\n            isSilentMode\n          />\n        )\n      }\n\n      <ul>\n        <p>Results</p>\n        {results()}\n      </ul>\n    </div >\n  )\n}\n\n\nexport default ImageUpload;\n","import React from \"react\";\nimport \"./heading.module.scss\"\n\nconst Heading = (props) => {\n  const { headingStyle: HeadingStyle, headingText } = props\n\n  return (\n    <HeadingStyle className=\"heading\">\n      {headingText}\n    </HeadingStyle>\n  )\n}\nexport default Heading;\n\n\n","import Heading from \"components/atoms/Heading/Heading\";\nimport React from \"react\";\nimport { Button, Jumbotron } from \"react-bootstrap\";\nimport \"./header.module.scss\"\n\nconst Header = (props) => {\n  const { headingStyle, headingText, buttonType, buttonText } = props\n\n  return (\n    <div className=\"header\">\n      <Jumbotron fluid>\n        <Heading headingStyle={headingStyle} headingText={headingText} />\n        <Button variant={buttonType} >{buttonText}</Button>\n      </Jumbotron>\n    </div>\n  )\n}\n\nexport default Header;\n\n\n","import ImageUpload from \"components/atoms/ImageUpload/ImageUpload\";\r\nimport Header from \"components/organisms/Header/Header\";\r\nimport React from \"react\";\r\nimport \"./home.module.scss\"\r\n\r\nconst Home = () => {\r\n\r\n\r\n\r\n  return (\r\n    <main id=\"home\" className=\"home\">\r\n      <Header\r\n        headingStyle=\"h1\"\r\n        headingText=\"Welcome\"\r\n        buttonType=\"primary\"\r\n        buttonText=\"Learn more\"\r\n      />\r\n\r\n      <ImageUpload\r\n\r\n      />\r\n    </main>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useState } from \"react\";\n// eslint-disable-next-line\nimport { Route } from \"react-router-dom\";\nimport Home from \"pages/Home/Home\";\nimport { useSelector } from \"react-redux\";\n\nfunction PrivateRoute({ role, children: Component, ...rest }) {\n  const auth = useSelector((state) => state.firebase.auth);\n\n  const [showAlert, setShowAlert] = useState(true);\n  if (role === undefined) {\n    role = false;\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !auth.isEmpty ? (\n          Component\n        ) : showAlert ? (\n          <>\n            <div className=\"alert alert-danger login-alert\" role=\"alert\">\n              Please login first!\n              <button\n                className=\"btn-success alert-close-btn\"\n                onClick={() => setShowAlert(false)}\n              >\n                X\n              </button>\n            </div>\n          </>\n        ) : (\n          <Home {...props} />\n        )\n      }\n    />\n  );\n}\nexport default PrivateRoute;\n\n/// create component with alert message to login\n","import React, { useState } from \"react\";\nimport { Toast, Alert, Button } from \"react-bootstrap\";\n\nconst Notifications = ({\n  heading,\n  body,\n  type,\n  small,\n  variant,\n  confirmButtonText,\n  handleConfirm,\n  style,\n}) => {\n  const [show, setShow] = useState(true);\n\n  return (\n    show &&\n    (type === \"alert\" ? (\n      <Alert\n        variant={variant}\n        onClose={() => setShow(false)}\n        style={style}\n        dismissible\n      >\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p>{body}</p>\n        {confirmButtonText && (\n          <Button variant=\"outline-danger\" onClick={handleConfirm}>\n            {confirmButtonText}{\" \"}\n          </Button>\n        )}\n      </Alert>\n    ) : (\n      type === \"toast\" && (\n        <Toast onClose={() => setShow(false)} style={style}>\n          <Toast.Header>\n            <strong className=\"mr-auto\">{heading.toUpperCase()}</strong>\n            <small>{small}</small>\n          </Toast.Header>\n          <Toast.Body>{body}</Toast.Body>\n        </Toast>\n      )\n    ))\n  );\n};\n\nexport default Notifications;\n","import React, { useState } from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Notifications from \"components/atoms/Notifications/Notifications\";\n\nimport \"assets/stylesheets/signin.scss\";\n\nconst SignIn = () => {\n  const firebase = useFirebase();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const signInWithProvider = (provider) => {\n    let userEmail = email.length >= 1 ? email : \"\";\n    let userPassword = password.length >= 1 ? password : \"\";\n\n    firebase\n      .login({\n        provider: provider === \"email\" ? null : provider,\n        type: \"popup\",\n        email: userEmail,\n        password: userPassword,\n      })\n      .then(() => {\n        history.push(\"/admin\");\n      })\n      .catch((err) => {\n        if (err.code.includes(\"account-exists\")) {\n          setErrors([...errors, \"Account Exists\"]);\n        }\n      });\n  };\n  const errorElements = () =>\n    errors.map((error, i) => <div key={i}>{error}</div>);\n\n  return (\n    <div className=\"login__page\">\n      {errors.length >= 1 && (\n        <Notifications\n          type={\"alert\"}\n          variant={\"danger\"}\n          heading={\"Error\"}\n          body={errorElements()}\n        />\n      )}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"card col-md-4 col-md-offset-4\">\n            <div className=\"login__card\">\n              <div className=\"card-block\">\n                <form name=\"userform\" method=\"post\">\n                  <h3>Log In </h3>\n                  <Link to=\"sign-up\">Sign up</Link>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      id=\"exampleInputEmail1\"\n                      placeholder=\"Email\"\n                      name=\"email\"\n                      required\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"exampleInputPassword1\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      required\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-primary btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"email\");\n                      }}\n                    >\n                      Login with Email\n                    </button>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"facebook\");\n                      }}\n                    >\n                      <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n                      Login with Facebook\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"twitter\");\n                      }}\n                    >\n                      <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n                      Login with Twitter\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"github\");\n                      }}\n                    >\n                      <i className=\"fa fa-github\" aria-hidden=\"true\"></i>\n                      Login with Github\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"google\");\n                      }}\n                    >\n                      <i className=\"fa fa-google\" aria-hidden=\"true\"></i>\n                      Login with Google\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default SignIn;\n","import React, { useState } from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Notifications from \"components/atoms/Notifications/Notifications\";\nimport \"assets/stylesheets/signin.scss\";\n\nconst SignIn = () => {\n  const firebase = useFirebase();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const signInWithProvider = (provider) => {\n    let userEmail = email.length >= 1 ? email : \"\";\n    let userPassword = password.length >= 1 ? password : \"\";\n    if (provider === \"email\") {\n      firebase\n        .createUser({\n          email,\n          password,\n        })\n        .then(() => {\n          history.push(\"/home\");\n        })\n        .catch((err) => {\n          if (err.code.includes(\"account-exists\")) {\n            setErrors([...errors, \"Account Exists\"]);\n          }\n        });\n    } else {\n      firebase\n        .login({\n          provider: provider === \"email\" ? null : provider,\n          type: \"popup\",\n          email: userEmail,\n          password: userPassword,\n        })\n        .then(() => {\n          history.push(\"/home\");\n        })\n        .catch((err) => {\n          if (err.code.includes(\"account-exists\")) {\n            setErrors([...errors, \"Account Exists\"]);\n          }\n        });\n    }\n  };\n  const errorElements = () =>\n    errors.map((error, i) => <div key={i}>{error}</div>);\n\n  return (\n    <div className=\"login__page\">\n      {errors.length >= 1 && (\n        <Notifications\n          type={\"alert\"}\n          variant={\"danger\"}\n          heading={\"Error\"}\n          body={errorElements()}\n        />\n      )}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"card col-md-4 col-md-offset-4\">\n            <div className=\"login__card\">\n              <div className=\"card-block\">\n                <form name=\"userform\" method=\"post\">\n                  <h3>Sign up </h3>\n                  <Link to=\"sign-in\">Log In</Link>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      id=\"exampleInputEmail1\"\n                      placeholder=\"Email\"\n                      name=\"email\"\n                      required\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"exampleInputPassword1\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      required\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-primary btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"email\");\n                      }}\n                    >\n                      Login with Email\n                    </button>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"facebook\");\n                      }}\n                    >\n                      <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n                      Login with Facebook\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"twitter\");\n                      }}\n                    >\n                      <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n                      Login with Twitter\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"github\");\n                      }}\n                    >\n                      <i className=\"fa fa-github\" aria-hidden=\"true\"></i>\n                      Login with Github\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"google\");\n                      }}\n                    >\n                      <i className=\"fa fa-google\" aria-hidden=\"true\"></i>\n                      Login with Google\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <h1>Sign In</h1>\n    </div>\n  );\n};\nexport default SignIn;\n","import React from \"react\";\n\nconst AdminHome = () => {\n  return <div className=\"\">Admin</div>;\n};\n\nexport default AdminHome;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport NavBar from \"components/organisms/NavBar\"\n\nimport Home from \"pages/Home/Home\";\nimport PrivateRoute from \"components/organisms/Auth/PrivateRoute/PrivateRoute\";\nimport SignIn from \"components/organisms/Auth/SignIn/SignIn\";\nimport SignUp from \"components/organisms/Auth/SignUp/SignUp\";\nimport AdminHome from \"pages/Admin/AdminHome/AdminHome\";\n\nconst App = () => {\n  return (\n    <React.Fragment >\n      <NavBar />\n      <Switch>\n        <PrivateRoute exact path=\"/admin\">\n          <AdminHome />\n        </PrivateRoute>\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/sign-in\" component={SignIn} />\n        <Route path=\"/sign-up\" component={SignUp} />\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import Heading from \"components/atoms/Heading/Heading\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ErrorPage = () => {\n  return (\n    <div id=\"notfound\">\n      <div className=\"notfound\">\n        <div className=\"notfound-404\">\n          <h1>404</h1>\n        </div>\n        <Heading headingStyle=\"h1\">Oops, The Page you are looking for can't be found!</Heading>\n\n        <Link to=\"/\">\n          <span className=\"arrow\"></span>Return To Homepage\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport ErrorPage from \"pages/ErrorPage\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  // eslint-disable-next-line \n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  // eslint-disable-next-line \n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, errorInfo);\n    // console.log(error);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <ErrorPage />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ErrorBoundary);\n","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducers\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const SAMPLE_TYPE = \"SAMPLE_TYPE\";\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { createLogger } from \"redux-logger\";\n\nconst loggerMiddleware = createLogger();\nconst initialState = {};\nconst middleware = [thunk, loggerMiddleware];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(applyMiddleware(...middleware))\n);\nexport default store;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport unregister from \"./registerServiceWorker\";\r\nimport ErrorBoundary from \"components/atoms/ErrorBoundary/ErrorBoundary\";\r\n\r\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./config/firebase\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true,\r\n};\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance, //since we are using Firestore\r\n};\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <BrowserRouter basename=\"react-starter-template\">\r\n        {/* <ErrorBoundary> */}\r\n        <App />\r\n        {/* </ErrorBoundary> */}\r\n      </BrowserRouter>\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n/**\r\n * Be aware that the website will only update to the latest version on the 2nd page visit if it as already cached\r\n * Learn more about service workers in React: https://create-react-app.dev/docs/making-a-progressive-web-app\r\n */\r\nunregister();\r\n"],"sourceRoot":""}