{"version":3,"sources":["components/organisms/NavBar/index.jsx","config/firebase.js","api/backend.js","components/atoms/Icon/Icon.jsx","components/atoms/Heading/Heading.jsx","helpers/textFunctions.js","api/dataMuse.js","components/atoms/AutoComplete/AutoComplete.jsx","redux/actions/dbActions.js","redux/types.js","components/atoms/Dropdown/Dropdown.jsx","components/atoms/uploader/ImageUpload/default/ImageUpload.jsx","components/organisms/Header/Header.jsx","pages/Home/Home.jsx","components/organisms/Auth/PrivateRoute/PrivateRoute.jsx","components/atoms/Notifications/Notifications.jsx","components/organisms/Auth/SignIn/SignIn.jsx","components/organisms/Auth/SignUp/SignUp.jsx","pages/Admin/AdminHome/AdminHome.jsx","components/organisms/card/Card-post/Card-post.jsx","components/molecules/Posts/list/Posts.jsx","components/molecules/Posts/details/Post-details.jsx","pages/Admin/profile/ProfileEdit.jsx","App.jsx","registerServiceWorker.js","pages/ErrorPage/index.jsx","components/atoms/ErrorBoundary/ErrorBoundary.jsx","redux/reducers/errorReducers.js","redux/reducers/dbReducers.js","redux/reducers/index.js","redux/store.js","index.jsx"],"names":["NavBar","firebase","useFirebase","history","useHistory","isLoggedIn","useSelector","state","auth","isEmpty","_useState","useState","_useState2","Object","slicedToArray","pathName","setPathName","useEffect","react_default","a","createElement","className","hidden","href","react_router_dom","to","concat","Fragment","variant","onClick","signOut","then","console","log","push","catch","error","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","axios","create","baseURL","Icon","_ref","_ref$icon","icon","Heading","props","_props$headingStyle","headingStyle","HeadingStyle","headingText","classname","capitalize","string","charAt","toUpperCase","slice","AutoComplete","_ref$type","type","_ref$name","name","_ref$classname","_ref$placeholder","placeholder","_ref$label","label","handleClick","handleTitleChange","parentClass","_ref$isForm","isForm","value","_ref$disabled","disabled","autoCompleteResults","setAutoCompleteResults","_useState3","_useState4","query","setQuery","handleAutoComplete","_ref2","asyncToGenerator","regenerator_default","mark","_callee","results","words","_iterator","_step","result","wrap","_context","prev","next","length","dataMuse","get","sent","_createForOfIteratorHelper","data","s","n","done","score","err","e","f","stop","_x","apply","this","arguments","handleQuery","preventDefault","target","Form","Group","controlId","Label","Control","onChange","map","index","ListGroup","key","Item","handleResultClick","word","wakeDb","dispatch","backend","res","setDbStatus","status","payload","DropdownMenu","toggleTitle","style","labeledBy","onToggle","onSelect","setValue","Dropdown","Toggle","id","undefined","Menu","aria-labelledby","FormControl","autoFocus","child","i","includes","eventKey","withRouter","connect","useFirestore","isLoading","setLoading","_useSelector","profile","userId","uid","imgUrl","uploadedImage","setUploadedImage","_useState5","_useState6","title","setTitle","_useState7","_useState8","description","setDescription","_useState9","_useState10","price","setPrice","_useState11","_useState12","predictions","setPredictions","_useState13","_useState14","post","setPost","dbIsActive","db","handleFireBaseUpload","_callee2","imageAsFile","_context2","ref","put","on","snapShot","storageResponse","firebaseUrl","getDownloadURL","src","alt","innerTitle","innerdescription","prevObject","objectSpread","fetchPredictions","_ref3","_callee3","url","_context3","minValue","limit","response","abrupt","_x2","handleSavePost","_ref4","_callee4","currentPost","postResponse","_context4","dateCreated","Date","isAvailable","views","likes","user","collection","add","doc","update","_x3","_useState15","_useState16","categories","setCategories","_useState17","_useState18","suggestedKeywords","setSuggestedKeywords","_useState19","_useState20","suggestedDescriptions","setSuggestedDescriptions","_useState21","_useState22","synonyms","setSynonyms","_useState23","_useState24","showSuggestions","setShowSuggestions","handleDescriptionSuggestionClick","suggestion","getDescriptionSuggestions","_ref5","_callee5","descriptionSuggestions","_descriptionSuggestio","keywords","_context5","encodeURI","_x4","react_router","pathname","atoms_Heading_Heading","height","width","Spinner","animation","role","onSubmit","atoms_AutoComplete_AutoComplete","as","rows","Dropdown_Dropdown","Button","_ref6","min","prediction","atoms_Icon_Icon","image","files","accept","Header","buttonType","buttonText","Jumbotron","fluid","Home","organisms_Header_Header","default_ImageUpload","PrivateRoute","Component","children","rest","objectWithoutProperties","showAlert","setShowAlert","assign","render","pages_Home_Home","Notifications","heading","_ref$headingStyle","body","small","confirmButtonText","handleConfirm","handleCloseFunction","show","setShow","handleClose","Alert","onClose","dismissible","Toast","Body","SignIn","email","setEmail","password","setPassword","errors","setErrors","signInWithProvider","provider","userEmail","userPassword","login","updateProfile","phone","code","toConsumableArray","atoms_Notifications_Notifications","method","htmlFor","required","event","aria-hidden","setPhone","createUser","displayName","avatarUrl","providerData","maxlength","replace","AdminHome","Container","Card","display","flexDirection","Img","Title","Text","phoneNumber","areaCode","mid","end","formatPhoneNumber","CardPost","_ref$htmlIs","htmlIs","Link","Posts","useFirestoreConnect","posts","elms","postId","Card_post","postElms","PostDetails","location","ProfileEdit","useDispatch","setDisplayName","handleImage","message","handleSubmit","marginTop","defaultValue","File","maxLength","showErrors","setShowErrors","setErrorMessage","keys","organisms_NavBar","exact","path","component","SignUp","PrivateRoute_PrivateRoute","Admin_AdminHome_AdminHome","Post_details","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ErrorPage","ErrorBoundary","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","errorInfo","pages_ErrorPage","React","initialState","combineReducers","action","firebaseReducer","firestoreReducer","loggerMiddleware","createLogger","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","react_redux_es","es","basename","atoms_ErrorBoundary_ErrorBoundary","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f6ae4466.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./navbar.scss\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nconst NavBar = () => {\n  const firebase = useFirebase();\n  const history = useHistory();\n  const isLoggedIn = useSelector((state) => !state.firebase.auth.isEmpty);\n\n  const signOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(function () {\n        // Sign-out successful.\n        console.log(\"signed out\");\n        history.push(\"/sign-in\");\n      })\n      .catch(function (error) {\n        // An error happened.\n        console.log(error);\n      });\n  };\n\n  // const [visible, setVisibility] = useState(true);\n  const [pathName, setPathName] = useState(\"/gotit/\");\n\n  useEffect(() => {\n    //   const pathName = window.location.pathname\n\n    // if (pathName !== \"/gotit/\") {\n    //   setVisibility(true)\n    setPathName(pathName)\n    // }\n\n  }, [pathName])\n\n  return (\n    <div className={\"navbar-default\"}>\n      <div className=\"skip-link\" hidden>\n        <a href=\"#home\">Skip to Main Content</a>\n      </div>\n      <nav className=\"navbar navbar-expand-sm navbar-light border-bottom justify-content-between\">\n        <Link\n          to=\"/\"\n          className=\"navbar-brand\"\n        >\n          react_starter_template\n        </Link>\n        <div className=\"navbar-nav\">\n          <Link\n            to=\"/\"\n            className={`nav-item nav-link ${pathName === \"/\" ? \"active\" : ''}`}\n          >\n            Home\n          </Link>\n          <Link\n            to=\"/posts\"\n            className={`nav-item nav-link ${pathName === \"/posts\" ? \"active\" : ''}`}\n          >\n            Posts\n          </Link>\n          {isLoggedIn ? (\n            <>\n              <Link to=\"/profile\" className=\"nav-item nav-link \">\n                Account\n              </Link>\n\n              <Link\n                variant={\"outline-secondary\"}\n                className=\"nav-item nav-link \"\n                onClick={() => signOut()}\n                to=\"#\"\n              >\n                Logout\n              </Link>\n            </>\n          ) : (\n              <Link to=\"/sign-in\">Sign In</Link>\n            )}\n        </div>\n      </nav>\n    </div>\n  );\n};\nexport default NavBar;\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// firebase.analytics();\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst storage = firebase.storage();\n\nexport { storage, auth, firestore };\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://gotit-development.herokuapp.com/api\",\n});\n","import React from \"react\";\nimport \"./icon.scss\"\n\nconst Icon = ({ icon = 'fa fa-camera-retro' }) => {\n  return (\n    <>\n      <i\n        className={icon}\n      ></i>\n    </>\n  )\n}\nexport default Icon;\n\n\n","import React from \"react\";\nimport \"./heading.module.scss\"\n\nconst Heading = (props) => {\n  const { headingStyle: HeadingStyle = 'h1', headingText, classname } = props\n\n  return (\n    <HeadingStyle className={`${classname}`}>\n      {headingText}\n    </HeadingStyle>\n  )\n}\nexport default Heading;\n\n\n","const capitalize = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nexport { capitalize }","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.datamuse.com/\",\n});\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Form, ListGroup } from \"react-bootstrap\";\nimport \"./autoComplete.scss\"\nimport dataMuse from \"api/dataMuse\";\nimport { capitalize } from \"helpers/textFunctions\";\n\n\nconst AutoComplete = ({\n  type = \"text\",\n  name = \"search\",\n  classname = \"search\",\n  placeholder = \"Search...\",\n  label = \"Search:\",\n  handleClick,\n  handleTitleChange,\n  parentClass,\n  isForm = true,\n  value,\n  disabled = false\n}) => {\n\n  const [autoCompleteResults, setAutoCompleteResults] = useState()\n\n  const [query, setQuery] = useState()\n\n  const handleAutoComplete = async (query) => {\n    if (!disabled) {\n      if (query.length > 3) {\n\n        const results = await dataMuse.get(`sug?s=${query}`)\n\n        if (results) {\n\n          const words = []\n\n          for (const result of results.data) {\n            if (result.score > 992) {\n              words.push(result)\n            }\n          }\n\n          setAutoCompleteResults(words)\n        }\n\n      } else {\n        setAutoCompleteResults([])\n      }\n    }\n\n  }\n\n  const handleQuery = (e) => {\n    e.preventDefault()\n\n    const value = e.target.value\n    handleAutoComplete(value)\n    setQuery(value)\n    handleTitleChange(value)\n  }\n\n  const handleResultClick = (result) => {\n    if (result) {\n      setQuery()\n      handleClick(result)\n      setAutoCompleteResults([])\n    }\n  }\n\n  const autoCompleteResultElems = () => {\n    return autoCompleteResults && autoCompleteResults.map((result, index) => {\n      return (\n        <ListGroup key={index}>\n          <ListGroup.Item\n            onClick={() => handleResultClick(result.word)}\n            value={result.word}\n          >\n            {capitalize(result.word)}\n          </ListGroup.Item>\n        </ListGroup>\n      )\n    })\n  }\n\n  return (\n    <div className=\"auto-complete\">\n      {isForm ? (\n        <Form className={`auto-complete__form ${parentClass}`}>\n          <Form.Group controlId={name}>\n            <Form.Label>{label}</Form.Label>\n\n            <Form.Control\n              type={type}\n              className={`input-group-${type} ${classname}`}\n              name={name}\n              value={capitalize(query)}\n              onChange={(e) => handleQuery(e)}\n              placeholder={placeholder}\n              onClick={handleClick}\n            />\n          </Form.Group>\n        </Form>\n      ) : (\n          <div className={parentClass}>\n            <Form.Group controlId={name}>\n              <Form.Label>{label}</Form.Label>\n\n              <Form.Control\n                type={type}\n                className={`input-group-${type} ${classname}`}\n                name={name}\n                value={query ? capitalize(query) : capitalize(value)}\n                onChange={(e) => handleQuery(e)}\n                placeholder={placeholder}\n              />\n            </Form.Group>\n          </div>\n        )}\n\n      {!disabled && (\n        <div className=\"auto-complete__results\">\n          {autoCompleteResultElems()}\n        </div>\n      )}\n    </div>\n  )\n}\nexport default AutoComplete;\n\n\n","import backend from \"api/backend\";\n// import local from \"api/local\";\nimport { GET_ERRORS, SET_DB_STATUS } from \"../types\";\n\nexport const wakeDb = () => (dispatch) => {\n  backend\n    .get(\"/\")\n    .then(res => {\n      dispatch(setDbStatus(res.data.status))\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err,\n      });\n    });\n\n};\n\nexport const setDbStatus = (status) => {\n  return {\n    type: SET_DB_STATUS,\n    status\n  };\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const SET_ERRORS = \"SET_ERRORS\";\nexport const SET_DB_STATUS = \"SET_DB_STATUS\";\n","import React, { useState } from 'react';\nimport { FormControl, Dropdown } from \"react-bootstrap\";\nimport \"./dropdown.scss\"\n\nconst DropdownMenu = ({\n  toggleTitle,\n  style,\n  labeledBy,\n  data,\n  onToggle,\n  classname,\n  onSelect,\n}) => {\n  const [value, setValue] = useState('');\n\n  return (\n    <div className=\"dropdown\">\n      <Dropdown>\n        <Dropdown.Toggle id=\"dropdown-menu\">\n          <div\n            value={toggleTitle}\n            onClick={(e) => {\n              e.preventDefault();\n              onToggle !== undefined && onToggle(e);\n            }}\n            className=\"toggle-btn\"\n          >\n            {toggleTitle} {\" \"}\n          </div>\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <div\n            style={style}\n            className={classname}\n            aria-labelledby={labeledBy}\n          >\n            <FormControl\n              autoFocus\n              className=\"mx-3 my-2 w-auto\"\n              placeholder=\"Type to filter...\"\n              onChange={(e) => setValue(e.target.value)}\n              value={value}\n            />\n            <ul className=\"list-unstyled\">\n              {data && data.map((child, i) =>\n                child.includes(value) &&\n                (\n                  <Dropdown.Item\n                    eventKey={i}\n                    onClick={() => onSelect(child)}\n                    key={i}\n                  >\n                    {child}\n                  </Dropdown.Item>\n                )\n              )}\n            </ul>\n          </div>\n        </Dropdown.Menu>\n      </Dropdown>\n    </div >\n  );\n}\n\nexport default DropdownMenu; ","import { storage } from \"config/firebase\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, Spinner } from \"react-bootstrap\";\nimport { connect, useSelector } from \"react-redux\";\nimport \"./imageUpload.scss\"\nimport backend from \"api/backend\"\nimport Icon from \"components/atoms/Icon/Icon\";\nimport Heading from \"components/atoms/Heading/Heading\";\nimport { capitalize } from \"helpers/textFunctions\";\nimport { useFirestore } from \"react-redux-firebase\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport AutoComplete from \"components/atoms/AutoComplete/AutoComplete\";\nimport { wakeDb } from \"redux/actions/dbActions\"\n// import local from \"api/local\";\nimport DropdownMenu from \"components/atoms/Dropdown/Dropdown\";\n\nconst ImageUpload = (props) => {\n  const firestore = useFirestore()\n  const [isLoading, setLoading] = useState(false)\n\n  const { auth, profile } = useSelector((state) => state.firebase)\n  const userId = !auth.isEmpty ? auth.uid : undefined\n\n  // Form\n  const allInputs = { imgUrl: \"\" };\n  const [uploadedImage, setUploadedImage] = useState(allInputs);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(0)\n\n  const [predictions, setPredictions] = useState([])\n\n  const [post, setPost] = useState()\n\n  const dbIsActive = useSelector(state => state.db.status)\n\n  useEffect(() => {\n    if (dbIsActive !== 'active') {\n      props.wakeDb()\n    }\n    // eslint-disable-next-line \n  }, [])\n\n  const handleImage = (e) => {\n    const image = e.target.files[0];\n\n    handleFireBaseUpload(image)\n  }\n\n  const handleFireBaseUpload = async (imageAsFile) => {\n\n    // image loading\n    if (imageAsFile === \"\") {\n      setPredictions([{ name: `Error: not an image, the image file is a ${typeof imageAsFile}` }])\n    }\n\n    const uploadTask = storage.ref(`${userId}/images/${imageAsFile.name}`)\n      .put(imageAsFile)\n    //  initiates the firebase side uploading\n    uploadTask.on(\n      \"state_changed\",\n      (snapShot) => {\n        setLoading(!isLoading)\n        console.log(snapShot);\n      },\n      (err) => {\n        // dispatch error \n        console.log(err);\n      },\n      async () => {\n        const storageResponse = await storage\n          .ref(`${userId}/images`)\n          .child(imageAsFile.name)\n          .getDownloadURL()\n\n        const firebaseUrl = storageResponse ? storageResponse : {}\n\n        // save url in mongo\n        let data = {\n          src: firebaseUrl,\n          alt: imageAsFile.name,\n          innerTitle: title,\n          innerdescription: description,\n        };\n\n        setUploadedImage((prevObject) => ({\n          ...data,\n          ...prevObject,\n          imgUrl: firebaseUrl,\n        }));\n\n        // Get predictions \n        fetchPredictions(firebaseUrl)\n      }\n    );\n  };\n\n  const fetchPredictions = async (url) => {\n    // if server is deployed use this\n    return await backend.post(\"/images\", {\n      imgUrl: url,\n      minValue: 0.97,\n      limit: 5\n    }).then(response => {\n      if (response.data.length > 0) {\n        setPredictions(response.data)\n        setLoading(false)\n        setTitle(capitalize(response.data[0].name))\n      } else {\n        setPredictions([{ name: 'No Matches' }])\n        setLoading(false)\n      }\n    })\n  }\n\n  const results = () => {\n    return predictions.length > 0 && predictions.map((prediction, index) => {\n      return (<li key={index} onClick={() =>\n        setTitle(capitalize(prediction.name))\n      }>{capitalize(prediction.name)}</li>)\n    })\n  }\n\n  const handleSavePost = async (e) => {\n    e.preventDefault()\n    console.log(\"save post \")\n    const currentPost = {\n      src: uploadedImage.imgUrl,\n      title,\n      description,\n      price,\n      dateCreated: new Date(),\n      isAvailable: true,\n      views: 0,\n      likes: 0,\n      user: {\n        id: userId,\n        profile\n      },\n    }\n\n    const postResponse = await firestore.collection('posts').add(currentPost)\n\n    if (postResponse.id) {\n      await firestore.collection('posts').doc(postResponse.id).update({\n        id: postResponse.id\n      })\n\n      currentPost.id = postResponse.id\n      setPost(currentPost)\n    }\n  }\n\n  const handleTitleChange = (value) => {\n    setTitle(value)\n  }\n\n  const [categories, setCategories] = useState([])\n  const [suggestedKeywords, setSuggestedKeywords] = useState([])\n  const [suggestedDescriptions, setSuggestedDescriptions] = useState([])\n  const [synonyms, setSynonyms] = useState([])\n  const [showSuggestions, setShowSuggestions] = useState(false)\n\n  const handleDescriptionSuggestionClick = (suggestion) => {\n    setDescription(`${description} ${suggestion}`)\n  }\n\n  const descriptionEls = () => {\n    return (\n      <div className=\"suggested-descriptions\">\n        {categories.length > 0 && (\n          <DropdownMenu\n            toggleTitle={\"Categories\"}\n            data={categories}\n            onSelect={handleDescriptionSuggestionClick}\n            className=\"categories\"\n          />\n        )}\n\n        {suggestedKeywords.length > 0 && (\n          <DropdownMenu\n            toggleTitle={\"Keywords\"}\n            data={suggestedKeywords}\n            onSelect={handleDescriptionSuggestionClick}\n            className=\"keywords\"\n          />\n        )}\n\n        {suggestedDescriptions.length > 0 && (\n          <DropdownMenu\n            toggleTitle={\"Suggested Definitions\"}\n            data={suggestedDescriptions}\n            onSelect={handleDescriptionSuggestionClick}\n            className=\"definitions\"\n          />\n        )}\n\n        {synonyms.length > 0 && (\n          <DropdownMenu\n            toggleTitle={\"Synonyms\"}\n            data={synonyms}\n            onSelect={handleDescriptionSuggestionClick}\n            className=\"synonyms\"\n          />\n        )}\n      </div>\n    )\n  }\n\n  const getDescriptionSuggestions = async (e) => {\n    e.preventDefault()\n    const descriptionSuggestions = await backend.get(`descriptions?search=${encodeURI(title)}`)\n\n    const { categories, keywords, suggestedDescriptions, synonyms } = descriptionSuggestions.data\n\n    setCategories(categories)\n    setSuggestedKeywords(keywords)\n    setSuggestedDescriptions(suggestedDescriptions)\n    setSynonyms(synonyms)\n    setShowSuggestions(true)\n  }\n\n  if (post && post.id) {\n    return (<Redirect to={{\n      pathname: `/posts/${post.id}`,\n      state: post\n    }} />)\n\n  }\n\n  return (\n    <div className=\"image-upload container\">\n      <Heading\n        headingText=\"Create Post\"\n        classname=\"image-upload__title\"\n      />\n      <div\n        className=\"image-upload__sub-title\"\n      >\n        <em>Title auto-generates after uploading a picture</em>\n      </div>\n\n      {uploadedImage.src && (\n        <div\n          className=\"image-preview\"\n        >\n          <img\n            src={uploadedImage.imgUrl}\n            alt={uploadedImage.alt}\n            height={400}\n            width={400}\n          />\n        </div>\n      )}\n\n      {isLoading && (\n        <Spinner animation=\"border\" role=\"status\" className=\"image-upload__loader\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      )}\n\n      <Form onSubmit={handleSavePost} className=\"image-upload__form\">\n        <AutoComplete\n          value={title}\n          name=\"title\"\n          classname=\"input-group-text title\"\n          placeholder=\"Title\"\n          label=\"Title\"\n          handleTitleChange={handleTitleChange}\n          handleClick={(title) => setTitle(title)}\n          parentClass=\"image-upload__form\"\n          isForm={false}\n          disabled\n        />\n\n        <Form.Group controlId=\"description\" >\n          <Form.Label>Description: </Form.Label>\n\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            className=\"input-group-text description\"\n            name=\"title\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"description\"\n          />\n        </Form.Group>\n\n        {showSuggestions && descriptionEls()}\n\n        <Button onClick={(e) => getDescriptionSuggestions(e)}>Get Description Suggestions</Button>\n\n        <Form.Group controlId=\"price\">\n          <Form.Label>CAD $</Form.Label>\n\n          <Form.Control\n            className=\"input-group-number price\"\n            name=\"price\"\n            value={price}\n            onChange={({ target: { value } }) => setPrice(value)}\n            type=\"number\"\n            min=\"1\" />\n        </Form.Group>\n\n        <Button\n          type=\"submit\"\n          variant=\"secondary\"\n          disabled={!title || !price}\n        >\n          Sell Item\n        </Button>\n      </Form>\n\n      <h2>Suggestions</h2>\n      <ul className=\"image-upload__results\">\n        {results()}\n      </ul>\n\n      <Form\n        onSubmit={handleFireBaseUpload} className=\"image-upload__form\"\n      >\n        <Form.Group\n          controlId=\"upload\"\n        >\n          <Form.Label className=\"upload-label\">\n            <Icon />\n          </Form.Label>\n\n          <Form.Control\n            className=\"input-group-file image upload-input\"\n            type=\"file\"\n            onChange={handleImage}\n            accept=\"image/*\"\n          />\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\n\nexport default withRouter(connect(() => { return {} }, { wakeDb })(ImageUpload));\n\n","import Heading from \"components/atoms/Heading/Heading\";\nimport React from \"react\";\nimport { Button, Jumbotron } from \"react-bootstrap\";\nimport \"./header.module.scss\"\n\nconst Header = (props) => {\n  const { headingStyle, headingText, buttonType, buttonText } = props\n\n  return (\n    <div className=\"header\">\n      <Jumbotron fluid>\n        <Heading headingStyle={headingStyle} headingText={headingText} />\n        <Button variant={buttonType} >{buttonText}</Button>\n      </Jumbotron>\n    </div>\n  )\n}\n\nexport default Header;\n\n\n","import ImageUpload from \"components/atoms/uploader/ImageUpload/default/ImageUpload\";\r\nimport Header from \"components/organisms/Header/Header\";\r\nimport React from \"react\";\r\nimport \"./home.scss\"\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <main id=\"home\" className=\"home\">\r\n      <Header\r\n        headingStyle=\"h1\"\r\n        headingText=\"Welcome\"\r\n        buttonType=\"primary\"\r\n        buttonText=\"Learn more\"\r\n      />\r\n\r\n      <ImageUpload />\r\n    </main>\r\n  );\r\n};\r\nexport default Home \r\n","import React, { useState } from \"react\";\n// eslint-disable-next-line\nimport { Route } from \"react-router-dom\";\nimport Home from \"pages/Home/Home\";\nimport { useSelector } from \"react-redux\";\n\nfunction PrivateRoute({ role, children: Component, ...rest }) {\n  const auth = useSelector((state) => state.firebase.auth);\n\n  const [showAlert, setShowAlert] = useState(true);\n  if (role === undefined) {\n    role = false;\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !auth.isEmpty ? (\n          Component\n        ) : showAlert ? (\n          <>\n            <div className=\"alert alert-danger login-alert\" role=\"alert\">\n              Please login first!\n              <button\n                className=\"btn-success alert-close-btn\"\n                onClick={() => setShowAlert(false)}\n              >\n                X\n              </button>\n            </div>\n          </>\n        ) : (\n          <Home {...props} />\n        )\n      }\n    />\n  );\n}\nexport default PrivateRoute;\n\n/// create component with alert message to login\n","import React, { useState } from \"react\";\nimport { Toast, Alert, Button } from \"react-bootstrap\";\nimport Heading from \"components/atoms/Heading/Heading\";\nimport \"./notifications.scss\"\n\nconst Notifications = ({\n  heading,\n  headingStyle = \"h3\",\n  body,\n  type,\n  small,\n  variant,\n  confirmButtonText,\n  handleConfirm,\n  style,\n  handleCloseFunction\n}) => {\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => {\n    if (handleCloseFunction !== undefined) {\n      handleCloseFunction()\n    } else {\n      setShow(!show)\n    }\n  }\n\n  return (\n    show &&\n    (type === \"alert\" ? (\n      <Alert\n        className=\"notifications\"\n        variant={variant}\n        onClose={() => handleClose()}\n        style={style}\n        dismissible\n      >\n        <Alert.Heading>{heading}</Alert.Heading>\n\n        <p>{body}</p>\n\n        {confirmButtonText && (\n          <Button\n            variant=\"outline-danger\"\n            onClick={handleConfirm}\n          >\n            {confirmButtonText}{\" \"}\n          </Button>\n        )}\n      </Alert>\n    ) : (\n        type === \"toast\" && (\n          <Toast\n            className=\"notifications\"\n            onClose={() => handleClose()}\n            style={style}\n          >\n            <Toast.Header>\n              <Heading headingStyle={headingStyle} className=\"mr-auto\">{heading}</Heading>\n              <small>{small}</small>\n            </Toast.Header>\n            <Toast.Body>\n              {body}\n            </Toast.Body>\n          </Toast>\n        )\n      ))\n  );\n};\n\nexport default Notifications;\n","import React, { useState } from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Notifications from \"components/atoms/Notifications/Notifications\";\n\nimport \"assets/stylesheets/signin.scss\";\n\nconst SignIn = () => {\n  const firebase = useFirebase();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const signInWithProvider = (provider) => {\n    let userEmail = email.length >= 1 ? email : \"\";\n    let userPassword = password.length >= 1 ? password : \"\";\n\n    firebase\n      .login({\n        provider: provider === \"email\" ? null : provider,\n        type: \"popup\",\n        email: userEmail,\n        password: userPassword,\n      })\n      .then(async () => {\n        await firebase.updateProfile({ phone: '' })\n        history.push(\"/admin\");\n      })\n      .catch((err) => {\n        if (err.code !== undefined) {\n          if (err.code.includes(\"account-exists\")) {\n            setErrors([...errors, \"Account Exists\"]);\n          }\n        }\n\n        setErrors([...errors, 'Unknown Error' + err])\n      });\n  };\n  const errorElements = () =>\n    errors.map((error, i) => <div key={i}>{error}</div>);\n\n  return (\n    <div className=\"login__page\">\n      {errors.length >= 1 && (\n        <Notifications\n          type={\"alert\"}\n          variant={\"danger\"}\n          heading={\"Error\"}\n          body={errorElements()}\n        />\n      )}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"card col-md-4 col-md-offset-4\">\n            <div className=\"login__card\">\n              <div className=\"card-block\">\n                <form name=\"userform\" method=\"post\">\n                  <h3>Log In </h3>\n                  <Link to=\"sign-up\">Sign up</Link>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      id=\"exampleInputEmail1\"\n                      placeholder=\"Email\"\n                      name=\"email\"\n                      required\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"exampleInputPassword1\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      required\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-primary btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"email\");\n                      }}\n                    >\n                      Login with Email\n                    </button>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"facebook\");\n                      }}\n                    >\n                      <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n                      Login with Facebook\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"twitter\");\n                      }}\n                    >\n                      <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n                      Login with Twitter\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"github\");\n                      }}\n                    >\n                      <i className=\"fa fa-github\" aria-hidden=\"true\"></i>\n                      Login with Github\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"google\");\n                      }}\n                    >\n                      <i className=\"fa fa-google\" aria-hidden=\"true\"></i>\n                      Login with Google\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default SignIn;\n","import React, { useState } from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Notifications from \"components/atoms/Notifications/Notifications\";\nimport \"assets/stylesheets/signin.scss\";\nimport { Form } from \"react-bootstrap\";\n\nconst SignIn = () => {\n  const firebase = useFirebase();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const signInWithProvider = async (provider) => {\n    let userEmail = email.length >= 1 ? email : \"\";\n    let userPassword = password.length >= 1 ? password : \"\";\n\n    if (provider === \"email\") {\n      const user = await firebase\n        .createUser({\n          email,\n          password,\n\n\n        })\n        .then(async () => {\n          await firebase.\n            updateProfile({\n              displayName: email,\n              phone,\n              avatarUrl: '',\n              providerData: {\n                type: 'email'\n              },\n            }).then(res => {\n              history.push(\"/home\");\n            })\n        })\n        .catch((err) => {\n          if (err.code.includes(\"account-exists\")) {\n            setErrors([...errors, \"Account Exists\"]);\n          }\n        });\n\n\n    } else {\n      await firebase\n        .login({\n          provider: provider,\n          type: \"popup\",\n          email: userEmail,\n          password: userPassword,\n          phone\n        })\n        .then(async (res) => {\n          await firebase.updateProfile({ phone })\n          history.push(\"/home\");\n        })\n        .catch((err) => {\n          if (err.code !== undefined) {\n            if (err.code.includes(\"account-exists\")) {\n              setErrors([...errors, \"Account Exists\"]);\n            }\n          }\n\n          setErrors([...errors, 'Unknown Error'])\n        });\n    }\n  };\n  const errorElements = () =>\n    errors.map((error, i) => <div key={i}>{error}</div>);\n\n  return (\n    <div className=\"login__page\">\n      {errors.length >= 1 && (\n        <Notifications\n          type={\"alert\"}\n          variant={\"danger\"}\n          heading={\"Error\"}\n          body={errorElements()}\n        />\n      )}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"card col-md-4 col-md-offset-4\">\n            <div className=\"login__card\">\n              <div className=\"card-block\">\n                <Form name=\"userform\" method=\"post\">\n                  <h3>Sign up </h3>\n                  <Link to=\"sign-in\">Log In</Link>\n\n                  <Form.Group>\n                    <Form.Label htmlFor=\"exampleInputEmail1\">Email address</Form.Label>\n                    <Form.Control\n                      type=\"email\"\n                      id=\"exampleInputEmail1\"\n                      placeholder=\"Email\"\n                      name=\"email\"\n                      required\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Form.Label htmlFor=\"exampleInputPassword1\">Password</Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"exampleInputPassword1\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      required\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Form.Label htmlFor=\"phone\">Phone Number</Form.Label>\n                    <Form.Control\n                      type=\"tel\"\n                      maxlength=\"12\"\n                      className=\"form-control\"\n                      id=\"phone\"\n                      placeholder=\"416-555-5555\"\n                      name=\"phone\"\n                      onChange={(e) => setPhone(e.target.value.replace(/[\\s-]/g, ''))}\n                    />\n                  </Form.Group>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-primary btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"email\");\n                      }}\n                    >\n                      Signup with Email\n                    </button>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button\n                      type=\"buton\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"facebook\");\n                      }}\n                    >\n                      <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n                      Login with Facebook\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"twitter\");\n                      }}\n                    >\n                      <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n                      Login with Twitter\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"github\");\n                      }}\n                    >\n                      <i className=\"fa fa-github\" aria-hidden=\"true\"></i>\n                      Login with Github\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={(event) => {\n                        event.preventDefault();\n                        signInWithProvider(\"google\");\n                      }}\n                    >\n                      <i className=\"fa fa-google\" aria-hidden=\"true\"></i>\n                      Login with Google\n                    </button>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default SignIn;\n","import React from \"react\";\nimport \"App.scss\"\nimport { useSelector } from \"react-redux\";\nimport { Card, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst AdminHome = () => {\n\n  const { profile } = useSelector((state) => state.firebase)\n\n  const formatPhoneNumber = (phoneNumber) => {\n    const areaCode = phoneNumber.slice(0, 3)\n    const mid = phoneNumber.slice(3, 6)\n    const end = phoneNumber.slice(6, 10)\n\n    return `${areaCode}-${mid}-${end}`\n  }\n\n  return (\n    <Container className=\"admin\">\n      <Card style={{ width: '18rem', display: 'flex', flexDirection: 'row' }}>\n        <Card.Img variant=\"top\" src={profile.avatarUrl} />\n        <Card.Body>\n          <Card.Title>{profile.displayName}</Card.Title>\n          <Card.Text>\n            {profile.email}\n          </Card.Text>\n          <Card.Text>\n            {profile.phone && formatPhoneNumber(profile.phone)}\n          </Card.Text>\n          <Link to=\"profile/edit\" variant=\"primary\">Edit Profile</Link>\n        </Card.Body>\n      </Card>\n    </Container>\n  )\n};\n\nexport default AdminHome;\n","import InterestedButton from \"components/atoms/InterestedButton/InterestedButton\";\nimport React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport \"./card-post.scss\"\n\nconst CardPost = ({ post, htmlIs: Link = \"a\" }) => {\n  return (\n    <div className=\"card-post\">\n      <Card>\n        <Link href={`posts/${post.id}`}>\n          <Card.Img src={post.src} />\n\n          <Card.Body>\n            <Card.Title>{post.title}</Card.Title>\n\n            <Card.Text>\n              {post.description}\n            </Card.Text>\n\n            <Card.Text>\n              ${post.price} CAD\n          </Card.Text>\n          </Card.Body>\n        </Link>\n\n        {/* <InterestedButton post={post} /> */}\n      </Card>\n    </div>\n  )\n}\nexport default CardPost;\n\n\n","import Heading from \"components/atoms/Heading/Heading\";\nimport CardPost from \"components/organisms/card/Card-post/Card-post\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport \"./posts.scss\"\n\nconst Posts = () => {\n  useFirestoreConnect(['posts'])\n  const posts = useSelector((state) => state.firestore.data.posts)\n\n  const postElms = () => {\n\n    const elms = []\n\n    if (posts) {\n      for (const postId in posts) {\n        const post = posts[postId]\n\n        elms.push((\n          <li key={postId}>\n            <CardPost post={post} />\n          </li>\n        ))\n      }\n    }\n\n    return elms\n  }\n\n  return (\n    <div className=\"posts\">\n      <Heading\n        classname=\"posts__title\"\n        headingText=\"For sale\"\n      />\n\n      <ul>\n        {postElms()}\n      </ul>\n    </div >\n  )\n}\nexport default Posts;\n\n\n","import CardPost from \"components/organisms/card/Card-post/Card-post\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport \"./post-details.scss\"\n\nconst PostDetails = ({ location, location: { state: currentPost } }) => {\n\n  const postId = currentPost && currentPost.id ? currentPost.id : location.pathname.replace(\"/posts/\", \"\")\n\n  useFirestoreConnect([\n    {\n      collection: 'posts',\n      doc: postId\n    }\n  ])\n\n  const post = useSelector(\n    ({ firestore: { data } }) => data.posts && data.posts[postId]\n  )\n\n  return (\n    <div className=\"post-details\">\n      {post && (\n        <>\n          <CardPost post={post} htmlIs={\"div\"} />\n          <div className=\"post-details__sender-info\">\n            <p>{post.user.profile.displayName}</p>\n\n          </div>\n        </>\n      )}\n\n\n    </div>\n  )\n}\nexport default PostDetails;\n\n\n","import { storage } from 'config/firebase';\nimport React, { useState } from 'react';\nimport { Button, Card, Container, Form, Spinner } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFirebase, useFirestore } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\n\nconst ProfileEdit = () => {\n  const dispatch = useDispatch()\n  const firebase = useFirebase()\n\n  const { profile, auth: { uid } } = useSelector((state) => state.firebase)\n  const [isLoading, setLoading] = useState(false)\n\n  const [displayName, setDisplayName] = useState('')\n  const [phone, setPhone] = useState(\"\");\n\n  const handleImage = async (e) => {\n    const imageAsFile = e.target.files[0]\n\n    if (imageAsFile === \"\") {\n      dispatch({\n        type: 'SET_ERRORS',\n        variant: 'danger',\n        message: `Error: not an image, the image file is a ${typeof imageAsFile}`\n      })\n    }\n\n    const uploadTask = storage.ref(`${uid}/images/profile_photos/${imageAsFile.name}`)\n      .put(imageAsFile)\n    //  initiates the firebase side uploading\n    uploadTask.on(\n      \"state_changed\",\n      (snapShot) => {\n        setLoading(!isLoading);\n        console.log(snapShot);\n      },\n      (err) => {\n        dispatch({\n          type: 'SET_ERRORS',\n          variant: 'danger',\n          message: err\n        })\n      },\n      async () => {\n        const firebaseUrl = await storage\n          .ref(`${uid}/images/profile_photos`)\n          .child(imageAsFile.name)\n          .getDownloadURL()\n\n        if (firebaseUrl) {\n          await firebase.updateProfile({\n            avatarUrl: firebaseUrl\n          })\n        }\n      }\n    );\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (displayName !== '') {\n      await firebase.updateProfile({\n        displayName\n      }).catch(err => {\n        dispatch({\n          type: \"SET_ERRORS\",\n          variant: 'danger',\n          message: 'Error updating username:' + err.message\n        })\n      })\n    }\n\n    if (phone !== '') {\n      await firebase.updateProfile({\n        phone\n      }).catch(err => {\n        dispatch({\n          type: \"SET_ERRORS\",\n          variant: 'danger',\n          message: 'Error updating contact number:' + err.message\n        })\n      })\n    }\n\n\n  }\n\n  return (\n    <Container className=\"profile-edit\">\n      <Card style={{ width: '18rem', display: 'flex', flexDirection: 'row', marginTop: \"40px\" }}>\n        <Card.Img variant=\"top\" src={profile.avatarUrl} />\n        <Card.Body>\n          <Card.Title>{profile.displayName}</Card.Title>\n          <Card.Text>\n            Email: {profile.email}\n          </Card.Text>\n          <Card.Text>\n            Phone: {profile.phone}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n\n      {isLoading && (\n        <Spinner animation=\"border\" role=\"status\" className=\"profile-edit__loader\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      )}\n\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Display Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder={profile.displayName}\n            defaultValue={profile.displayName}\n            onChange={(e) => setDisplayName(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group\n          controlId=\"avatarUrl\"\n        >\n          <Form.File\n            label=\"Change profile photo\"\n            className=\"input-group-file image upload-input\"\n            id=\"avatarUrl\"\n            accept=\"image/*\"\n            onChange={handleImage}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"phone\">Phone Number</Form.Label>\n          <Form.Control\n            type=\"tel\"\n            maxLength=\"10\"\n            className=\"form-control\"\n            id=\"phone\"\n            placeholder=\"4165555555\"\n            name=\"phone\"\n            defaultValue={profile.phone}\n            onChange={(e) => setPhone(e.target.value.replace(/[\\s-]/g, ''))}\n          />\n        </Form.Group>\n\n        <Button\n          variant=\"primary\"\n          type=\"submit\"\n          onClick={(e) => handleSubmit(e)}\n        >\n          Save\n      </Button>\n      </Form>\n    </Container>\n  );\n}\n\nexport default ProfileEdit;","import React, { useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport NavBar from \"components/organisms/NavBar\"\n\nimport Home from \"pages/Home/Home\";\nimport PrivateRoute from \"components/organisms/Auth/PrivateRoute/PrivateRoute\";\nimport SignIn from \"components/organisms/Auth/SignIn/SignIn\";\nimport SignUp from \"components/organisms/Auth/SignUp/SignUp\";\nimport AdminHome from \"pages/Admin/AdminHome/AdminHome\";\nimport Posts from \"components/molecules/Posts/list/Posts\";\nimport PostDetails from \"components/molecules/Posts/details/Post-details\";\nimport { useEffect } from \"react\";\n\nimport Notifications from \"components/atoms/Notifications/Notifications\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport ProfileEdit from \"pages/Admin/profile/ProfileEdit\";\nimport { wakeDb } from \"redux/actions/dbActions\"\n\nconst App = () => {\n  const { errors } = useSelector((state) => state)\n  const [showErrors, setShowErrors] = useState(false);\n  const [error, setErrorMessage] = useState({})\n\n  const dispatch = useDispatch()\n\n  const dbIsActive = useSelector(state => state.db.status)\n\n  useEffect(() => {\n    if (dbIsActive !== 'active') {\n      dispatch({\n        type: \"SET_DB_STATUS\",\n      })\n    }\n    // eslint-disable-next-line \n  }, [])\n\n  useEffect(() => {\n    if (Object.keys(errors).length > 0) {\n      setShowErrors(true)\n      setErrorMessage(errors.error)\n    }\n  }, [errors])\n\n  const handleCloseFunction = () => {\n    setShowErrors(false)\n    dispatch({\n      type: \"SET_ERRORS\",\n      payload: {}\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <NavBar />\n\n      {showErrors && (\n        error && (\n          <Notifications\n            variant={error.type ? error.type : \"danger\"}\n            type=\"alert\"\n            heading={error.heading ? error.heading : 'Error'}\n            body={error.message ? error.message : \"Something went wrong\"}\n            handleCloseFunction={handleCloseFunction\n            }\n          />\n        )\n      )}\n\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/sign-in\" component={SignIn} />\n        <Route exact path=\"/sign-up\" component={SignUp} />\n        <PrivateRoute exact path=\"/profile\">\n          <AdminHome />\n        </PrivateRoute>\n        <Route exact path=\"/profile/edit\" component={ProfileEdit} />\n        <Route exact path=\"/posts\" component={Posts} />\n        <Route exact path=\"/posts/:id\" render={(props) => <PostDetails {...props} />} />\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nexport default connect(() => ({}), { wakeDb })(App);\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import Heading from \"components/atoms/Heading/Heading\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ErrorPage = () => {\n  return (\n    <div id=\"notfound\">\n      <div className=\"notfound\">\n        <div className=\"notfound-404\">\n          <h1>404</h1>\n        </div>\n        <Heading headingStyle=\"h1\">Oops, The Page you are looking for can't be found!</Heading>\n\n        <Link to=\"/\">\n          <span className=\"arrow\"></span>Return To Homepage\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport ErrorPage from \"pages/ErrorPage\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  // eslint-disable-next-line \n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  // eslint-disable-next-line \n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, errorInfo);\n    // console.log(error);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <ErrorPage />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ErrorBoundary);\n","import { GET_ERRORS, SET_ERRORS } from \"../types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    case SET_ERRORS:\n      return {\n        ...state,\n        error: action.payload.error\n      }\n    default:\n      return state;\n  }\n}\n","import { SET_DB_STATUS } from \"../types\";\n\nconst initialState = {\n  status: \"inActive\"\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_DB_STATUS:\n      return {\n        ...state,\n        status: action.status,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducers\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport dbReducers from \"./dbReducers\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n  db: dbReducers\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { createLogger } from \"redux-logger\";\n\nconst loggerMiddleware = createLogger();\nconst initialState = {};\nconst middleware = [thunk, loggerMiddleware];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(applyMiddleware(...middleware))\n);\nexport default store;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport register from \"./registerServiceWorker\";\r\nimport ErrorBoundary from \"components/atoms/ErrorBoundary/ErrorBoundary\";\r\n\r\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./config/firebase\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true,\r\n};\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance, //since we are using Firestore\r\n};\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <BrowserRouter basename=\"/gotit\">\r\n        <ErrorBoundary>\r\n          <App />\r\n        </ErrorBoundary>\r\n      </BrowserRouter>\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n/**\r\n * Be aware that the website will only update to the latest version on the 2nd page visit if it as already cached\r\n * Learn more about service workers in React: https://create-react-app.dev/docs/making-a-progressive-web-app\r\n */\r\nregister();\r\n"],"sourceRoot":""}